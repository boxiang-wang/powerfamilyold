fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start1 = Sys.time()
#################################################################################
# call Fortran core
delta=2/9
delta <- as.double(delta)
fit <- .Fortran("hsvmlassoNET", delta, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit <- getoutput(fit, maxit, pmax, nvars, vnames)
fit <- c(fit, list(npasses = fit$npass, jerr = fit$jerr))
class(fit) <- c("hsvmpath")
if (is.null(lambda))
fit$lambda <- lamfix(fit$lambda)
#fit$call <- this.call
#################################################################################
class(fit) <- c("gcdnet", class(fit))
#fit
plot.gcdnet(fit)
stop1 = Sys.time()
difftime(stop1, start1, units="secs")
qv = 2
is.double(av)
is.double(qv)
is.integer(qv)
qv=integer(2)
is.double(qv)
is.integer(qv)
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = 2
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
start2 = Sys.time()
#################################################################################
qv = 2
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
fit1
qv
is.integer(2)
qv = integer(2)
is.integer(qv)
start2 = Sys.time()
#################################################################################
qv = integer(2)
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
fit1
start2 = Sys.time()
#################################################################################
qv = integer(2)
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = integer(2)
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
fit1
dyn.unload("M_powerfamilyNET.dll")
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = integer(2)
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = integer(2)
#qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
qv = integer(2)
qv = as.double(qv)
is.double(qv)
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = integer(2)
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = integer(2)
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
dyn.unload("M_powerfamilyNET.dll")
dyn.load("M_powerfamilyNET.dll")
start2 = Sys.time()
#################################################################################
qv = integer(2)
qv = as.double(qv)
fit1 <- .Fortran("powerfamilyNET", qv, lam2, nobs, nvars,
as.double(x), as.double(y), jd, pf, pf2, dfmax, pmax, nlam,
flmin, ulam, eps, isd, maxit, nalam = integer(1), b0 = double(nlam),
beta = double(pmax * nlam), ibeta = integer(pmax), nbeta = integer(nlam),
alam = double(nlam), npass = integer(1), jerr = integer(1))
#################################################################################
# output
fit1 <- getoutput(fit1, maxit, pmax, nvars, vnames)
fit1 <- c(fit1, list(npasses = fit1$npass, jerr = fit1$jerr))
class(fit1) <- c("powerfamilyNET")
if (is.null(lambda))
fit1$lambda <- lamfix(fit1$lambda)
#fit$call <- this.call
#################################################################################
class(fit1) <- c("gcdnet", class(fit1))
#fit1
plot.gcdnet(fit1)
stop2 = Sys.time()
difftime(stop2, start2, units="secs")
