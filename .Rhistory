data(promotergene)
install.packages("DWD")
require(DWD)
kdwd(y~.,data=FHT,C=100,scaled=TRUE)
gene <- kdwd(Class~.,data=promotergene,C=100,scaled=TRUE,cross=5)
gene@fitted
require(DWD)
install.packages("DWD")
require(DWD)
library(DWD)
require(DWD)
library(DWD)
install.packages("DWD")
library(DWD)
kdwd(y~.,data=FHT,C=100,scaled=TRUE)
gene <- kdwd(Class~.,data=promotergene,C=100,scaled=TRUE,cross=5)
gene@fitted
data(promotergene)
gene <- kdwd(Class~.,data=promotergene,C=100,scaled=TRUE,cross=5)
gene@fitted
promotergene
m = gcdnet(x=promotergene[,2:58],y=promotergene$Class,delta=2,method=c("hhsvm"))
library(gcdnet)
m = gcdnet(x=promotergene[,2:58],y=promotergene$Class,delta=2,method=c("hhsvm"))
gene <- kdwd(Class~.,data=FHT,C=100,scaled=TRUE,cross=5)
data(FHT)
gene <- kdwd(Class~.,data=FHT,C=100,scaled=TRUE,cross=5)
gene <- kdwd(y~.,data=FHT,C=100,scaled=TRUE,cross=5)
data(spam)
spam
gene <- kdwd(spam~.,data=spam,C=100,scaled=TRUE,cross=5)
gene <- kdwd(type~.,data=spam,C=100,scaled=TRUE,cross=5)
rm(list=ls(all=TRUE))
setwd("D:\\GitHub\\powerfamily")
require(Matrix)
source("GCDpower.R")
source("utilities.R")
source("p.GCDpower.R")
source("tools.GCDpower.R")
source("coef.GCDpower.R")
dyn.load("powerfamilyNET.dll")
dyn.load("hsvmlassoNET.dll")
load("FHT.rda")
library(DWD)
data(spam)
nobs.spam=nrow(spam)
spam$y=ifelse(spam$type == "spam",1,-1)
index=sample.int(nobs.spam,300)
dat = spam[index,]
x=dat[,1:57]
start1=Sys.time()
m1 <- gcdnetpower(x=x,y=dat$y,
#lambda=c(0.5,0.1),
lambda2=0, delta=2,method="hhsvm")
set.seed(123)
load("FHT.rda")
index = sample.int(50,50)
train.index = index[1:40]
test.index = index[41:50]
